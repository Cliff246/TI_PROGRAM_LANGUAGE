	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_ti_open_file
_ti_open_file:
	ld	hl, -7
	call	__frameset
	ld	de, (ix + 6)
	ld	bc, 0
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_1
	jq	BB0_7
BB0_1:
	ld	hl, (ix + 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_7
	push	de
	call	_strlen
	pop	de
	ld	bc, 65535
	call	__iand
	ld	(ix + -6), hl
	ld	de, 4
	add	hl, de
	push	hl
	ld	hl, 1
	push	hl
	call	_calloc
	pop	de
	pop	de
	ld	(ix + -3), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_3
	ld	hl, -1
	push	hl
	call	_os_ThrowError
	pop	hl
	ld	bc, (ix + -3)
	jq	BB0_7
BB0_3:
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_ti_Open
	pop	hl
	pop	hl
	ld	(ix + -7), a
	or	a, a
	ld	hl, -1
	push	hl
	call	z, _os_ThrowError
	pop	hl
	ld	hl, (ix + -3)
	ld	a, (ix + -7)
	ld	(hl), a
	ld	iy, (ix + -3)
	inc	iy
	ld	hl, 3
	push	hl
	ld	hl, (ix + 9)
	push	hl
	push	iy
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -6)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	iy, (ix + -3)
	pea	iy + 4
	call	_memcpy
	ld	bc, (ix + -3)
	pop	hl
	pop	hl
	pop	hl
BB0_7:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_pull_file
_pull_file:
	ld	hl, -6
	call	__frameset
	ld	iy, (ix + 6)
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, -1
	jq	z, BB1_14
	ld	e, (iy)
	ld	a, e
	or	a, a
	jq	z, BB1_14
	ld	a, e
	lea	bc, iy + 0
	inc	bc
	push	bc
	pop	hl
	ld	de, L_.str.3
	or	a, a
	sbc	hl, de
	jq	z, BB1_6
	ld	de, L_.str.2
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB1_6
	ld	de, L_.str
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	z, BB1_6
	ld	de, L_.str.1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	nz, BB1_10
BB1_6:
	ld	l, a
	push	hl
	call	_ti_GetSize
	pop	de
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	(ix + -6), de
	push	de
	call	_malloc
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_13
	ld	iy, 8
	ld	hl, (ix + 6)
	ld	a, (hl)
	ld	e, a
	push	de
	ld	hl, (ix + -6)
	push	hl
	push	iy
	ld	(ix + -3), bc
	push	bc
	call	_ti_Read
	pop	de
	pop	de
	pop	de
	pop	de
	ld	de, (ix + -6)
	or	a, a
	sbc	hl, de
	jq	z, BB1_15
BB1_13:
	ld	hl, -1
	push	hl
	call	_os_ThrowError
	pop	hl
	ld	hl, -1
BB1_14:
	ld	de, 0
	ld	(ix + -3), de
	push	hl
	call	_os_ThrowError
	pop	hl
BB1_15:
	ld	hl, (ix + -3)
	ld	sp, ix
	pop	ix
	ret
BB1_10:
	ld	(ix + -3), bc
BB1_11:
	ld	hl, L_.str.1
	push	hl
	pea	iy + 4
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jq	z, BB1_13
	ld	hl, 3
	push	hl
	ld	hl, L_.str.1
	push	hl
	ld	hl, (ix + -3)
	push	hl
	ld	(ix + -6), e
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	a, (ix + -6)
	ld	(hl), a
	push	hl
	pop	iy
	jq	BB1_11
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_create_file
_create_file:
	ld	hl, -4
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, L_.str.4
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_2
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_3
BB2_2:
	ld	hl, -1
	push	hl
	call	_os_ThrowError
	ld	de, L_.str.4
	pop	hl
BB2_3:
	push	de
	ld	hl, (ix + 9)
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jq	z, BB2_11
	ld	hl, (ix + 12)
	push	hl
	ld	(ix + -1), e
	call	_strlen
	ld	(ix + -4), hl
	pop	de
	push	hl
	pop	bc
	inc	bc
	ld	a, (ix + -1)
	ld	e, a
	push	de
	push	bc
	ld	hl, 8
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_ti_Write
	ld	a, (ix + -1)
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -4)
	or	a, a
	sbc	hl, de
	jq	nz, BB2_11
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_11
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_12
	ld	hl, (ix + 9)
	push	hl
	call	_strlen
	push	hl
	pop	bc
	pop	hl
	ld	hl, (ix + 6)
	ld	de, (hl)
	ld	(ix + -4), bc
	push	bc
	pop	hl
	ld	bc, 4
	add	hl, bc
	push	hl
	push	de
	call	_realloc
	push	hl
	pop	iy
	pop	hl
	pop	hl
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_10
	ld	hl, (ix + 6)
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_9
BB2_10:
	push	iy
	call	_free
	pop	hl
BB2_11:
	ld	hl, -1
	push	hl
	call	_os_ThrowError
	pop	hl
BB2_12:
	ld	sp, ix
	pop	ix
	ret
BB2_9:
	ld	hl, (ix + 6)
	ld	(hl), iy
	ld	hl, (ix + -4)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	pea	iy + 4
	ld	(ix + -4), iy
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 119
	ld	iy, (ix + -4)
	ld	(iy + 1), l
	ld	(iy + 2), h
	ld	a, (ix + -1)
	ld	(iy), a
	jq	BB2_12
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_close_file
_close_file:
	call	__frameset0
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB3_2
	ld	hl, -1
	push	hl
	call	_os_ThrowError
	jq	BB3_3
BB3_2:
	ld	a, (hl)
	ld	e, a
	push	de
	call	_ti_Close
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_free
BB3_3:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"r",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"r+",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"w+",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"a+",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"w",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_ti_Write
	extern	_ti_Close
	extern	_memcpy
	extern	_strlen
	extern	_ti_Read
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	_ti_Open
	extern	_ti_GetSize
	extern	_calloc
	extern	_realloc
	extern	_free
	extern	__frameset0
	extern	_os_ThrowError
